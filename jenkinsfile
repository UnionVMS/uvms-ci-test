def version

node {
  checkout scm
  def currentVersion = sh script: 'mvn help:evaluate -Dexpression=project.version -q -DforceStdout', returnStdout: true
  version = currentVersion.replace("-SNAPSHOT", "")
}

pipeline {
  agent any
  options {
    lock resource: 'Docker'
  }
  parameters {
    booleanParam(defaultValue: false, name: 'RELEASE', description: 'Create a release')
    string(name: 'VERSION', defaultValue: version, description: 'Release version')
  }
  tools {
    maven 'Maven3'
    jdk 'JDK11'
  }
  triggers {
    issueCommentTrigger('.*test me.*')
  }
  stages {
    stage('Remove docker containers') {
      when {
        expression { !params.RELEASE }
      }
      steps {
        sh 'docker ps -a -q|xargs -r docker rm -f'
      }
    }
    stage('Build') {
      when {
        allOf {
          not { branch 'main' }
          expression { !params.RELEASE }
        }
      }
      steps {
        sh 'mvn clean deploy -Pdocker,jacoco,postgres,publish-sql -U'
      }
    }
    stage('Build main') {
      when {
        allOf {
          branch 'main'
          expression { !params.RELEASE }
        }
      }
      steps {
        sh 'mvn clean deploy -DskipTests -Ppostgres,publish-sql -U'
      }
    }
    stage('SonarQube analysis') {
      when {
        allOf {
          not { branch 'main' }
          expression { !params.RELEASE }
        }
      }
      steps{ 
        withSonarQubeEnv('Sonarqube.com') {
          sh 'mvn $SONAR_MAVEN_GOAL -Dsonar.dynamicAnalysis=reuseReports -Dsonar.host.url=$SONAR_HOST_URL -Dsonar.login=$SONAR_AUTH_TOKEN $SONAR_EXTRA_PROPS'
        }
      }
    }
    stage('Release') {
      when {
        allOf {
          expression { params.RELEASE }
        }
      }
      steps {
        git branch: 'main', url: "$GIT_URL"
        git branch: 'develop', url: "$GIT_URL"
        sh "mvn -B gitflow:release -DskipTestProject -DreleaseVersion=${VERSION}"
      }
    }
  }
  post {
    always {
      deleteDir()
      //archiveArtifacts artifacts: '**/target/*.war'
      // junit '**/target/surefire-reports/*.xml'
    }
  }
}
